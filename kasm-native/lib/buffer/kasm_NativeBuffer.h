/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class kasm_NativeBuffer */

#ifndef _Included_kasm_NativeBuffer
#define _Included_kasm_NativeBuffer
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     kasm_NativeBuffer
 * Method:    allocate
 * Signature: (JZ)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_kasm_NativeBuffer_allocate
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     kasm_NativeBuffer
 * Method:    toArray
 * Signature: (Ljava/nio/ByteBuffer;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_kasm_NativeBuffer_toArray
  (JNIEnv *, jclass, jobject);

/*
 * Class:     kasm_NativeBuffer
 * Method:    protect
 * Signature: (Ljava/nio/ByteBuffer;Z)V
 */
JNIEXPORT void JNICALL Java_kasm_NativeBuffer_protect
  (JNIEnv *, jclass, jobject, jboolean);

/*
 * Class:     kasm_NativeBuffer
 * Method:    execute0
 * Signature: (Ljava/nio/ByteBuffer;)J
 */
JNIEXPORT jlong JNICALL Java_kasm_NativeBuffer_execute0
  (JNIEnv *, jclass, jobject);

/*
 * Class:     kasm_NativeBuffer
 * Method:    execute1
 * Signature: (Ljava/nio/ByteBuffer;J)J
 */
JNIEXPORT jlong JNICALL Java_kasm_NativeBuffer_execute1
  (JNIEnv *, jclass, jobject, jlong);

/*
 * Class:     kasm_NativeBuffer
 * Method:    execute2
 * Signature: (Ljava/nio/ByteBuffer;JJ)J
 */
JNIEXPORT jlong JNICALL Java_kasm_NativeBuffer_execute2
  (JNIEnv *, jclass, jobject, jlong, jlong);

/*
 * Class:     kasm_NativeBuffer
 * Method:    execute6
 * Signature: (Ljava/nio/ByteBuffer;JJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_kasm_NativeBuffer_execute6
  (JNIEnv *, jclass, jobject, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     kasm_NativeBuffer
 * Method:    executeUnsafe0
 * Signature: (Ljava/nio/ByteBuffer;)J
 */
JNIEXPORT jlong JNICALL Java_kasm_NativeBuffer_executeUnsafe0
  (JNIEnv *, jclass, jobject);

/*
 * Class:     kasm_NativeBuffer
 * Method:    executeUnsafe1
 * Signature: (Ljava/nio/ByteBuffer;J)J
 */
JNIEXPORT jlong JNICALL Java_kasm_NativeBuffer_executeUnsafe1
  (JNIEnv *, jclass, jobject, jlong);

/*
 * Class:     kasm_NativeBuffer
 * Method:    executeParallel0
 * Signature: (Ljava/nio/ByteBuffer;I)V
 */
JNIEXPORT void JNICALL Java_kasm_NativeBuffer_executeParallel0
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     kasm_NativeBuffer
 * Method:    executeParallelUnsafe0
 * Signature: (Ljava/nio/ByteBuffer;I)V
 */
JNIEXPORT void JNICALL Java_kasm_NativeBuffer_executeParallelUnsafe0
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     kasm_NativeBuffer
 * Method:    register
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_kasm_NativeBuffer_register
  (JNIEnv *, jclass);

/*
 * Class:     kasm_NativeBuffer
 * Method:    release
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_kasm_NativeBuffer_release
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     kasm_NativeBuffer
 * Method:    getAddress
 * Signature: (Ljava/nio/ByteBuffer;)J
 */
JNIEXPORT jlong JNICALL Java_kasm_NativeBuffer_getAddress
  (JNIEnv *, jclass, jobject);

#ifdef __cplusplus
}
#endif
#endif
